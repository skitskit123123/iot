10. Create AngularJS application that allows users to maintain a collection of items. The application should display the current total number of items, and this count should automatically update as items are added or removed. Users should be able to add items to the collection and remove them as needed. Note: The default values for items may be included in the program.
<!DOCTYPE html>
<html ng-app="itemApp">
<head>
  <title>Item Collection</title>
  <script src="angular.min.js"></script>
</head>
<body>

<div ng-controller="itemCtrl" id="itemCollection">
  <h2>Item Collection</h2>

  <label for="newItem">New Item:</label>
  <input type="text" id="newItem" ng-model="newItem" required>
  <button ng-click="addItem()">Add Item</button>

  <ul>
    <li ng-repeat="item in items">
      {{ item }}
      <button ng-click="removeItem($index)">Remove</button>
    </li>
  </ul>

  <p>Total Items: {{ items.length }}</p>
</div>
<script>
  var app = angular.module('itemApp', []);
  app.controller('itemCtrl', function ($scope)
  {
    $scope.items = ["Graphes", "Mango", "Papaya"];
    $scope.newItem = "";
    $scope.addItem = function () 
    {
      if ($scope.newItem.trim() !== "") 
      {
        $scope.items.push($scope.newItem);
        $scope.newItem = "";
      }
    };

    $scope.removeItem = function (index) 
    {
      $scope.items.splice(index, 1);
    };
  });
</script>
</body>
</html>


